#!/usr/bin/env bash

export DISPLAY=:0
export DBUS_SESSION_BUS_ADDRESS="unix:path=/run/user/1000/bus"

# Sometimes there is a ghost battery that shows up so we have to make sure we are getting the right one
BATTERY_LEVEL_ZERO=`acpi -b | grep "Battery 0" | tr ',' '\n' | grep -P -o '[0-9]+(?=%)'`
BATTERY_LEVEL_ONE=`acpi -b | grep "Battery 1" | tr ',' '\n' | grep -P -o '[0-9]+(?=%)'`

if [ -z $BATTERY_LEVEL_ONE ]; then
  BATTERY_LEVEL=$BATTERY_LEVEL_ZERO
else
  BATTERY_LEVEL=$BATTERY_LEVEL_ONE
fi



if [ $BATTERY_LEVEL -le 12 ]; then
  notify-send "Low Battery" "${BATTERY_LEVEL}% of battery remaining" -u normal -i none
fi



# This is the original script i found on the internet
##!/usr/bin/env bash

# export DISPLAY=:0
# export DBUS_SESSION_BUS_ADDRESS="unix:path=/run/user/1000/bus"

# # Battery percentage to notify
# WARNING_LEVEL=94
# BATTERY_DISCHARGING=`acpi -b | grep -c "Discharging"`
# BATTERY_LEVEL=`acpi -b | grep "Battery 1" | tr ',' '\n' | grep -P -o '[0-9]+(?=%)'`

# # These files indicate whether a notification has been sent
# EMPTY_FILE=/tmp/batteryempty
# FULL_FILE=/tmp/batteryfull

# # reset the notification if the computer is charging/discharging
# if [ $BATTERY_DISCHARGING -eq 1 ] && [ -f $FULL_FILE ]; then
#   rm $FULL_FILE
# elif [ $BATTERY_DISCHARGING -eq 0 ] && [ -f $EMPTY_FILE ]; then
#   rm $EMPTY_FILE
# fi

# # If the battery is charging and is full (and has not shown the notification yet)
# if [ "$BATTERY_LEVEL" -gt 95 ] && [ $BATTERY_DISCHARGING -eq 0 ] && [ ! -f $FULL_FILE ]; then
#   notify-send "Battery Charged" "Battery is fully charged." -u normal -i none
#   touch $FULL_FILE
#   # If the battery is low and is not charging (and has not shown the notification)
# elif [ "$BATTERY_LEVEL" -le $WARNING_LEVEL ] && [ $BATTERY_DISCHARGING -eq 1 ] && [! -f $EMPTY_FILE ]; then
#   notify-send "Low Battery" "${BATTERY_LEVEL}% of battery remaining" -u critical -i none
#   touch $EMPTY_FILE
# fi

